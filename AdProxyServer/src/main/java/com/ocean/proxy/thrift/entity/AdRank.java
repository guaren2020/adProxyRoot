/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ocean.proxy.thrift.entity;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-1-13")
public class AdRank implements org.apache.thrift.TBase<AdRank, AdRank._Fields>, java.io.Serializable, Cloneable, Comparable<AdRank> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AdRank");

  private static final org.apache.thrift.protocol.TField ADRANK_FIELD_DESC = new org.apache.thrift.protocol.TField("adrank", org.apache.thrift.protocol.TType.MAP, (short)1);
  private static final org.apache.thrift.protocol.TField AD_TOTAL_RANK_FIELD_DESC = new org.apache.thrift.protocol.TField("adTotalRank", org.apache.thrift.protocol.TType.LIST, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AdRankStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AdRankTupleSchemeFactory());
  }

  public Map<Long,AdRankingInfo> adrank; // required
  public List<AdRankingInfo> adTotalRank; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ADRANK((short)1, "adrank"),
    AD_TOTAL_RANK((short)2, "adTotalRank");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ADRANK
          return ADRANK;
        case 2: // AD_TOTAL_RANK
          return AD_TOTAL_RANK;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ADRANK, new org.apache.thrift.meta_data.FieldMetaData("adrank", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64), 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AdRankingInfo.class))));
    tmpMap.put(_Fields.AD_TOTAL_RANK, new org.apache.thrift.meta_data.FieldMetaData("adTotalRank", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AdRankingInfo.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AdRank.class, metaDataMap);
  }

  public AdRank() {
  }

  public AdRank(
    Map<Long,AdRankingInfo> adrank,
    List<AdRankingInfo> adTotalRank)
  {
    this();
    this.adrank = adrank;
    this.adTotalRank = adTotalRank;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AdRank(AdRank other) {
    if (other.isSetAdrank()) {
      Map<Long,AdRankingInfo> __this__adrank = new HashMap<Long,AdRankingInfo>(other.adrank.size());
      for (Map.Entry<Long, AdRankingInfo> other_element : other.adrank.entrySet()) {

        Long other_element_key = other_element.getKey();
        AdRankingInfo other_element_value = other_element.getValue();

        Long __this__adrank_copy_key = other_element_key;

        AdRankingInfo __this__adrank_copy_value = new AdRankingInfo(other_element_value);

        __this__adrank.put(__this__adrank_copy_key, __this__adrank_copy_value);
      }
      this.adrank = __this__adrank;
    }
    if (other.isSetAdTotalRank()) {
      List<AdRankingInfo> __this__adTotalRank = new ArrayList<AdRankingInfo>(other.adTotalRank.size());
      for (AdRankingInfo other_element : other.adTotalRank) {
        __this__adTotalRank.add(new AdRankingInfo(other_element));
      }
      this.adTotalRank = __this__adTotalRank;
    }
  }

  public AdRank deepCopy() {
    return new AdRank(this);
  }

  public void clear() {
    this.adrank = null;
    this.adTotalRank = null;
  }

  public int getAdrankSize() {
    return (this.adrank == null) ? 0 : this.adrank.size();
  }

  public void putToAdrank(long key, AdRankingInfo val) {
    if (this.adrank == null) {
      this.adrank = new HashMap<Long,AdRankingInfo>();
    }
    this.adrank.put(key, val);
  }

  public Map<Long,AdRankingInfo> getAdrank() {
    return this.adrank;
  }

  public AdRank setAdrank(Map<Long,AdRankingInfo> adrank) {
    this.adrank = adrank;
    return this;
  }

  public void unsetAdrank() {
    this.adrank = null;
  }

  /** Returns true if field adrank is set (has been assigned a value) and false otherwise */
  public boolean isSetAdrank() {
    return this.adrank != null;
  }

  public void setAdrankIsSet(boolean value) {
    if (!value) {
      this.adrank = null;
    }
  }

  public int getAdTotalRankSize() {
    return (this.adTotalRank == null) ? 0 : this.adTotalRank.size();
  }

  public java.util.Iterator<AdRankingInfo> getAdTotalRankIterator() {
    return (this.adTotalRank == null) ? null : this.adTotalRank.iterator();
  }

  public void addToAdTotalRank(AdRankingInfo elem) {
    if (this.adTotalRank == null) {
      this.adTotalRank = new ArrayList<AdRankingInfo>();
    }
    this.adTotalRank.add(elem);
  }

  public List<AdRankingInfo> getAdTotalRank() {
    return this.adTotalRank;
  }

  public AdRank setAdTotalRank(List<AdRankingInfo> adTotalRank) {
    this.adTotalRank = adTotalRank;
    return this;
  }

  public void unsetAdTotalRank() {
    this.adTotalRank = null;
  }

  /** Returns true if field adTotalRank is set (has been assigned a value) and false otherwise */
  public boolean isSetAdTotalRank() {
    return this.adTotalRank != null;
  }

  public void setAdTotalRankIsSet(boolean value) {
    if (!value) {
      this.adTotalRank = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ADRANK:
      if (value == null) {
        unsetAdrank();
      } else {
        setAdrank((Map<Long,AdRankingInfo>)value);
      }
      break;

    case AD_TOTAL_RANK:
      if (value == null) {
        unsetAdTotalRank();
      } else {
        setAdTotalRank((List<AdRankingInfo>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ADRANK:
      return getAdrank();

    case AD_TOTAL_RANK:
      return getAdTotalRank();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ADRANK:
      return isSetAdrank();
    case AD_TOTAL_RANK:
      return isSetAdTotalRank();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AdRank)
      return this.equals((AdRank)that);
    return false;
  }

  public boolean equals(AdRank that) {
    if (that == null)
      return false;

    boolean this_present_adrank = true && this.isSetAdrank();
    boolean that_present_adrank = true && that.isSetAdrank();
    if (this_present_adrank || that_present_adrank) {
      if (!(this_present_adrank && that_present_adrank))
        return false;
      if (!this.adrank.equals(that.adrank))
        return false;
    }

    boolean this_present_adTotalRank = true && this.isSetAdTotalRank();
    boolean that_present_adTotalRank = true && that.isSetAdTotalRank();
    if (this_present_adTotalRank || that_present_adTotalRank) {
      if (!(this_present_adTotalRank && that_present_adTotalRank))
        return false;
      if (!this.adTotalRank.equals(that.adTotalRank))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_adrank = true && (isSetAdrank());
    list.add(present_adrank);
    if (present_adrank)
      list.add(adrank);

    boolean present_adTotalRank = true && (isSetAdTotalRank());
    list.add(present_adTotalRank);
    if (present_adTotalRank)
      list.add(adTotalRank);

    return list.hashCode();
  }

  public int compareTo(AdRank other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAdrank()).compareTo(other.isSetAdrank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdrank()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adrank, other.adrank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdTotalRank()).compareTo(other.isSetAdTotalRank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdTotalRank()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adTotalRank, other.adTotalRank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AdRank(");
    boolean first = true;

    sb.append("adrank:");
    if (this.adrank == null) {
      sb.append("null");
    } else {
      sb.append(this.adrank);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("adTotalRank:");
    if (this.adTotalRank == null) {
      sb.append("null");
    } else {
      sb.append(this.adTotalRank);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (adrank == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'adrank' was not present! Struct: " + toString());
    }
    if (adTotalRank == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'adTotalRank' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AdRankStandardSchemeFactory implements SchemeFactory {
    public AdRankStandardScheme getScheme() {
      return new AdRankStandardScheme();
    }
  }

  private static class AdRankStandardScheme extends StandardScheme<AdRank> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AdRank struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ADRANK
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map0 = iprot.readMapBegin();
                struct.adrank = new HashMap<Long,AdRankingInfo>(2*_map0.size);
                long _key1;
                AdRankingInfo _val2;
                for (int _i3 = 0; _i3 < _map0.size; ++_i3)
                {
                  _key1 = iprot.readI64();
                  _val2 = new AdRankingInfo();
                  _val2.read(iprot);
                  struct.adrank.put(_key1, _val2);
                }
                iprot.readMapEnd();
              }
              struct.setAdrankIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // AD_TOTAL_RANK
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list4 = iprot.readListBegin();
                struct.adTotalRank = new ArrayList<AdRankingInfo>(_list4.size);
                AdRankingInfo _elem5;
                for (int _i6 = 0; _i6 < _list4.size; ++_i6)
                {
                  _elem5 = new AdRankingInfo();
                  _elem5.read(iprot);
                  struct.adTotalRank.add(_elem5);
                }
                iprot.readListEnd();
              }
              struct.setAdTotalRankIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AdRank struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.adrank != null) {
        oprot.writeFieldBegin(ADRANK_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I64, org.apache.thrift.protocol.TType.STRUCT, struct.adrank.size()));
          for (Map.Entry<Long, AdRankingInfo> _iter7 : struct.adrank.entrySet())
          {
            oprot.writeI64(_iter7.getKey());
            _iter7.getValue().write(oprot);
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.adTotalRank != null) {
        oprot.writeFieldBegin(AD_TOTAL_RANK_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.adTotalRank.size()));
          for (AdRankingInfo _iter8 : struct.adTotalRank)
          {
            _iter8.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AdRankTupleSchemeFactory implements SchemeFactory {
    public AdRankTupleScheme getScheme() {
      return new AdRankTupleScheme();
    }
  }

  private static class AdRankTupleScheme extends TupleScheme<AdRank> {

    public void write(org.apache.thrift.protocol.TProtocol prot, AdRank struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      {
        oprot.writeI32(struct.adrank.size());
        for (Map.Entry<Long, AdRankingInfo> _iter9 : struct.adrank.entrySet())
        {
          oprot.writeI64(_iter9.getKey());
          _iter9.getValue().write(oprot);
        }
      }
      {
        oprot.writeI32(struct.adTotalRank.size());
        for (AdRankingInfo _iter10 : struct.adTotalRank)
        {
          _iter10.write(oprot);
        }
      }
    }

    public void read(org.apache.thrift.protocol.TProtocol prot, AdRank struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      {
        org.apache.thrift.protocol.TMap _map11 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I64, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.adrank = new HashMap<Long,AdRankingInfo>(2*_map11.size);
        long _key12;
        AdRankingInfo _val13;
        for (int _i14 = 0; _i14 < _map11.size; ++_i14)
        {
          _key12 = iprot.readI64();
          _val13 = new AdRankingInfo();
          _val13.read(iprot);
          struct.adrank.put(_key12, _val13);
        }
      }
      struct.setAdrankIsSet(true);
      {
        org.apache.thrift.protocol.TList _list15 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.adTotalRank = new ArrayList<AdRankingInfo>(_list15.size);
        AdRankingInfo _elem16;
        for (int _i17 = 0; _i17 < _list15.size; ++_i17)
        {
          _elem16 = new AdRankingInfo();
          _elem16.read(iprot);
          struct.adTotalRank.add(_elem16);
        }
      }
      struct.setAdTotalRankIsSet(true);
    }
  }

}

