/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ocean.proxy.thrift.entity;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-1-13")
public class DeliveryProduct implements org.apache.thrift.TBase<DeliveryProduct, DeliveryProduct._Fields>, java.io.Serializable, Cloneable, Comparable<DeliveryProduct> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("DeliveryProduct");

  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PRODUCT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("productType", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField PRODUCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("productName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField AD_SPACE_CTRLS_FIELD_DESC = new org.apache.thrift.protocol.TField("adSpaceCtrls", org.apache.thrift.protocol.TType.MAP, (short)4);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new DeliveryProductStandardSchemeFactory());
    schemes.put(TupleScheme.class, new DeliveryProductTupleSchemeFactory());
  }

  public int productId; // required
  /**
   * 
   * @see ProductType
   */
  public ProductType productType; // optional
  public String productName; // required
  public Map<Integer,AdSpaceCtrl> adSpaceCtrls; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PRODUCT_ID((short)1, "productId"),
    /**
     * 
     * @see ProductType
     */
    PRODUCT_TYPE((short)2, "productType"),
    PRODUCT_NAME((short)3, "productName"),
    AD_SPACE_CTRLS((short)4, "adSpaceCtrls");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PRODUCT_ID
          return PRODUCT_ID;
        case 2: // PRODUCT_TYPE
          return PRODUCT_TYPE;
        case 3: // PRODUCT_NAME
          return PRODUCT_NAME;
        case 4: // AD_SPACE_CTRLS
          return AD_SPACE_CTRLS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PRODUCTID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.PRODUCT_TYPE,_Fields.AD_SPACE_CTRLS};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRODUCT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("productType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ProductType.class)));
    tmpMap.put(_Fields.PRODUCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("productName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AD_SPACE_CTRLS, new org.apache.thrift.meta_data.FieldMetaData("adSpaceCtrls", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "AdSpaceCtrl"))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(DeliveryProduct.class, metaDataMap);
  }

  public DeliveryProduct() {
  }

  public DeliveryProduct(
    int productId,
    String productName)
  {
    this();
    this.productId = productId;
    setProductIdIsSet(true);
    this.productName = productName;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public DeliveryProduct(DeliveryProduct other) {
    __isset_bitfield = other.__isset_bitfield;
    this.productId = other.productId;
    if (other.isSetProductType()) {
      this.productType = other.productType;
    }
    if (other.isSetProductName()) {
      this.productName = other.productName;
    }
    if (other.isSetAdSpaceCtrls()) {
      Map<Integer,AdSpaceCtrl> __this__adSpaceCtrls = new HashMap<Integer,AdSpaceCtrl>(other.adSpaceCtrls.size());
      for (Map.Entry<Integer, AdSpaceCtrl> other_element : other.adSpaceCtrls.entrySet()) {

        Integer other_element_key = other_element.getKey();
        AdSpaceCtrl other_element_value = other_element.getValue();

        Integer __this__adSpaceCtrls_copy_key = other_element_key;

        AdSpaceCtrl __this__adSpaceCtrls_copy_value = other_element_value;

        __this__adSpaceCtrls.put(__this__adSpaceCtrls_copy_key, __this__adSpaceCtrls_copy_value);
      }
      this.adSpaceCtrls = __this__adSpaceCtrls;
    }
  }

  public DeliveryProduct deepCopy() {
    return new DeliveryProduct(this);
  }

  
  public void clear() {
    setProductIdIsSet(false);
    this.productId = 0;
    this.productType = null;
    this.productName = null;
    this.adSpaceCtrls = null;
  }

  public int getProductId() {
    return this.productId;
  }

  public DeliveryProduct setProductId(int productId) {
    this.productId = productId;
    setProductIdIsSet(true);
    return this;
  }

  public void unsetProductId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRODUCTID_ISSET_ID);
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return EncodingUtils.testBit(__isset_bitfield, __PRODUCTID_ISSET_ID);
  }

  public void setProductIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRODUCTID_ISSET_ID, value);
  }

  /**
   * 
   * @see ProductType
   */
  public ProductType getProductType() {
    return this.productType;
  }

  /**
   * 
   * @see ProductType
   */
  public DeliveryProduct setProductType(ProductType productType) {
    this.productType = productType;
    return this;
  }

  public void unsetProductType() {
    this.productType = null;
  }

  /** Returns true if field productType is set (has been assigned a value) and false otherwise */
  public boolean isSetProductType() {
    return this.productType != null;
  }

  public void setProductTypeIsSet(boolean value) {
    if (!value) {
      this.productType = null;
    }
  }

  public String getProductName() {
    return this.productName;
  }

  public DeliveryProduct setProductName(String productName) {
    this.productName = productName;
    return this;
  }

  public void unsetProductName() {
    this.productName = null;
  }

  /** Returns true if field productName is set (has been assigned a value) and false otherwise */
  public boolean isSetProductName() {
    return this.productName != null;
  }

  public void setProductNameIsSet(boolean value) {
    if (!value) {
      this.productName = null;
    }
  }

  public int getAdSpaceCtrlsSize() {
    return (this.adSpaceCtrls == null) ? 0 : this.adSpaceCtrls.size();
  }

  public void putToAdSpaceCtrls(int key, AdSpaceCtrl val) {
    if (this.adSpaceCtrls == null) {
      this.adSpaceCtrls = new HashMap<Integer,AdSpaceCtrl>();
    }
    this.adSpaceCtrls.put(key, val);
  }

  public Map<Integer,AdSpaceCtrl> getAdSpaceCtrls() {
    return this.adSpaceCtrls;
  }

  public DeliveryProduct setAdSpaceCtrls(Map<Integer,AdSpaceCtrl> adSpaceCtrls) {
    this.adSpaceCtrls = adSpaceCtrls;
    return this;
  }

  public void unsetAdSpaceCtrls() {
    this.adSpaceCtrls = null;
  }

  /** Returns true if field adSpaceCtrls is set (has been assigned a value) and false otherwise */
  public boolean isSetAdSpaceCtrls() {
    return this.adSpaceCtrls != null;
  }

  public void setAdSpaceCtrlsIsSet(boolean value) {
    if (!value) {
      this.adSpaceCtrls = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((Integer)value);
      }
      break;

    case PRODUCT_TYPE:
      if (value == null) {
        unsetProductType();
      } else {
        setProductType((ProductType)value);
      }
      break;

    case PRODUCT_NAME:
      if (value == null) {
        unsetProductName();
      } else {
        setProductName((String)value);
      }
      break;

    case AD_SPACE_CTRLS:
      if (value == null) {
        unsetAdSpaceCtrls();
      } else {
        setAdSpaceCtrls((Map<Integer,AdSpaceCtrl>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PRODUCT_ID:
      return Integer.valueOf(getProductId());

    case PRODUCT_TYPE:
      return getProductType();

    case PRODUCT_NAME:
      return getProductName();

    case AD_SPACE_CTRLS:
      return getAdSpaceCtrls();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PRODUCT_ID:
      return isSetProductId();
    case PRODUCT_TYPE:
      return isSetProductType();
    case PRODUCT_NAME:
      return isSetProductName();
    case AD_SPACE_CTRLS:
      return isSetAdSpaceCtrls();
    }
    throw new IllegalStateException();
  }

  
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof DeliveryProduct)
      return this.equals((DeliveryProduct)that);
    return false;
  }

  public boolean equals(DeliveryProduct that) {
    if (that == null)
      return false;

    boolean this_present_productId = true;
    boolean that_present_productId = true;
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (this.productId != that.productId)
        return false;
    }

    boolean this_present_productType = true && this.isSetProductType();
    boolean that_present_productType = true && that.isSetProductType();
    if (this_present_productType || that_present_productType) {
      if (!(this_present_productType && that_present_productType))
        return false;
      if (!this.productType.equals(that.productType))
        return false;
    }

    boolean this_present_productName = true && this.isSetProductName();
    boolean that_present_productName = true && that.isSetProductName();
    if (this_present_productName || that_present_productName) {
      if (!(this_present_productName && that_present_productName))
        return false;
      if (!this.productName.equals(that.productName))
        return false;
    }

    boolean this_present_adSpaceCtrls = true && this.isSetAdSpaceCtrls();
    boolean that_present_adSpaceCtrls = true && that.isSetAdSpaceCtrls();
    if (this_present_adSpaceCtrls || that_present_adSpaceCtrls) {
      if (!(this_present_adSpaceCtrls && that_present_adSpaceCtrls))
        return false;
      if (!this.adSpaceCtrls.equals(that.adSpaceCtrls))
        return false;
    }

    return true;
  }

  
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_productId = true;
    list.add(present_productId);
    if (present_productId)
      list.add(productId);

    boolean present_productType = true && (isSetProductType());
    list.add(present_productType);
    if (present_productType)
      list.add(productType.getValue());

    boolean present_productName = true && (isSetProductName());
    list.add(present_productName);
    if (present_productName)
      list.add(productName);

    boolean present_adSpaceCtrls = true && (isSetAdSpaceCtrls());
    list.add(present_adSpaceCtrls);
    if (present_adSpaceCtrls)
      list.add(adSpaceCtrls);

    return list.hashCode();
  }

  
  public int compareTo(DeliveryProduct other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductType()).compareTo(other.isSetProductType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productType, other.productType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductName()).compareTo(other.isSetProductName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productName, other.productName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdSpaceCtrls()).compareTo(other.isSetAdSpaceCtrls());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdSpaceCtrls()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adSpaceCtrls, other.adSpaceCtrls);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  
  public String toString() {
    StringBuilder sb = new StringBuilder("DeliveryProduct(");
    boolean first = true;

    sb.append("productId:");
    sb.append(this.productId);
    first = false;
    if (isSetProductType()) {
      if (!first) sb.append(", ");
      sb.append("productType:");
      if (this.productType == null) {
        sb.append("null");
      } else {
        sb.append(this.productType);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("productName:");
    if (this.productName == null) {
      sb.append("null");
    } else {
      sb.append(this.productName);
    }
    first = false;
    if (isSetAdSpaceCtrls()) {
      if (!first) sb.append(", ");
      sb.append("adSpaceCtrls:");
      if (this.adSpaceCtrls == null) {
        sb.append("null");
      } else {
        sb.append(this.adSpaceCtrls);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'productId' because it's a primitive and you chose the non-beans generator.
    if (productName == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'productName' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class DeliveryProductStandardSchemeFactory implements SchemeFactory {
    public DeliveryProductStandardScheme getScheme() {
      return new DeliveryProductStandardScheme();
    }
  }

  private static class DeliveryProductStandardScheme extends StandardScheme<DeliveryProduct> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, DeliveryProduct struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.productId = iprot.readI32();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PRODUCT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.productType = com.ocean.proxy.thrift.entity.ProductType.findByValue(iprot.readI32());
              struct.setProductTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PRODUCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productName = iprot.readString();
              struct.setProductNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AD_SPACE_CTRLS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map324 = iprot.readMapBegin();
                struct.adSpaceCtrls = new HashMap<Integer,AdSpaceCtrl>(2*_map324.size);
                int _key325;
                AdSpaceCtrl _val326;
                for (int _i327 = 0; _i327 < _map324.size; ++_i327)
                {
                  _key325 = iprot.readI32();
                  _val326 = new AdSpaceCtrl();
                  _val326.read(iprot);
                  struct.adSpaceCtrls.put(_key325, _val326);
                }
                iprot.readMapEnd();
              }
              struct.setAdSpaceCtrlsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetProductId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'productId' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, DeliveryProduct struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
      oprot.writeI32(struct.productId);
      oprot.writeFieldEnd();
      if (struct.productType != null) {
        if (struct.isSetProductType()) {
          oprot.writeFieldBegin(PRODUCT_TYPE_FIELD_DESC);
          oprot.writeI32(struct.productType.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.productName != null) {
        oprot.writeFieldBegin(PRODUCT_NAME_FIELD_DESC);
        oprot.writeString(struct.productName);
        oprot.writeFieldEnd();
      }
      if (struct.adSpaceCtrls != null) {
        if (struct.isSetAdSpaceCtrls()) {
          oprot.writeFieldBegin(AD_SPACE_CTRLS_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRUCT, struct.adSpaceCtrls.size()));
            for (Map.Entry<Integer, AdSpaceCtrl> _iter328 : struct.adSpaceCtrls.entrySet())
            {
              oprot.writeI32(_iter328.getKey());
              _iter328.getValue().write(oprot);
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class DeliveryProductTupleSchemeFactory implements SchemeFactory {
    public DeliveryProductTupleScheme getScheme() {
      return new DeliveryProductTupleScheme();
    }
  }

  private static class DeliveryProductTupleScheme extends TupleScheme<DeliveryProduct> {

    
    public void write(org.apache.thrift.protocol.TProtocol prot, DeliveryProduct struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct.productId);
      oprot.writeString(struct.productName);
      BitSet optionals = new BitSet();
      if (struct.isSetProductType()) {
        optionals.set(0);
      }
      if (struct.isSetAdSpaceCtrls()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetProductType()) {
        oprot.writeI32(struct.productType.getValue());
      }
      if (struct.isSetAdSpaceCtrls()) {
        {
          oprot.writeI32(struct.adSpaceCtrls.size());
          for (Map.Entry<Integer, AdSpaceCtrl> _iter329 : struct.adSpaceCtrls.entrySet())
          {
            oprot.writeI32(_iter329.getKey());
            _iter329.getValue().write(oprot);
          }
        }
      }
    }

    
    public void read(org.apache.thrift.protocol.TProtocol prot, DeliveryProduct struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.productId = iprot.readI32();
      struct.setProductIdIsSet(true);
      struct.productName = iprot.readString();
      struct.setProductNameIsSet(true);
      BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.productType = com.ocean.proxy.thrift.entity.ProductType.findByValue(iprot.readI32());
        struct.setProductTypeIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TMap _map330 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.adSpaceCtrls = new HashMap<Integer,AdSpaceCtrl>(2*_map330.size);
          int _key331;
          AdSpaceCtrl _val332;
          for (int _i333 = 0; _i333 < _map330.size; ++_i333)
          {
            _key331 = iprot.readI32();
            _val332 = new AdSpaceCtrl();
            _val332.read(iprot);
            struct.adSpaceCtrls.put(_key331, _val332);
          }
        }
        struct.setAdSpaceCtrlsIsSet(true);
      }
    }
  }

}

